#+TITLE: Matthias' NixOS System Flake Configuration
#+DESCRIPTION: General information about my flake and how to set it up
#+AUTHOR: Matthias Benaets

#+ATTR_ORG: :width 500
[[file:rsc/Header.svg]]

* Table of Content
- [[System Components]]
- [[NixOS Installation Guide]]
  - [[Partitioning]]
  - [[Installation]]
  - [[Finalization]]
- [[Nix-Darwin Installation Guide]]
- [[FAQ]]
- [[file:guide.org][Basic Guide.org]]

* System Components
|              | *NixOS*           | *Darwin*         |
|--------------+-------------------+------------------|
| *shell:*     | Zsh               | Zsh              |
| *DM:*        | LightDM           | /                |
| *WM:*        | Bspwm + Polybar   | Yabai            |
| *Hotkey*     | Sxhkd             | Skhd             |
| *Terminal*   | Alacritty         | Alacritty        |
| *Editor:*    | Nvim + Doom Emacs | Doom Emacs       |
| *Launcher:*  | Rofi              | Spotlight Search |
| *GTK Theme:* | Dracula           | /                |

* NixOS Installation Guide
This flake currently has *3* hosts
 1. desktop
    - UEFI boot w/ systemd-boot
 2. laptop
    - UEFI boot w/ grub (Dual Boot)
 3. vm
    - Legacy boot w/ grub

Flakes can be build with:
~$ sudo nixos-rebuild switch --flake .#<hostname>~

** Partitioning
This will depend on the host chosen.
*** UEFI
*In these commands*
- Partition Labels:
  - Boot = "boot"
  - Home = "nixos"
- Partition Size:
  - Boot = 512MiB
  - Swap = 8GiB
  - Home = Rest
- No Swap: Ignore line 3 & 7

#+BEGIN_SRC
# parted /dev/sda -- mklabel gpt
# parted /dev/sda -- mkpart primary 512MiB -8GiB
# parted /dev/sda -- mkpart primary linux-swap -8GiB 100%
# parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
# parted /dev/sda -- set 3 esp
# mkfs.ext4 -L nixos /dev/sda1
# mkswap -L /dev/sda2
# mkfs.fat -F 32 -n boot /dev/sda3
#+END_SRC
*** Legacy
*In these commands*
- Partition Label:
  - Home & Boot = "nixos"
  - Swap = "swap"
- Partition Size:
  - Swap = 8GiB
  - Home = Rest
- No swap: Ignore line 3 and 5

#+BEGIN_SRC
# parted /dev/sda -- mklabel msdos
# parted /dev/sda -- mkpart primary 1MiB -8GiB
# parted /dev/sda -- mkpart primary linux-swap -8GiB 100%
# mkfs.ext4 -L nixos /dev/sda1
# mkswap -L /dev/sda2
#+END_SRC
** Installation
*** UEFI
*In these commands*
- Partition with label ... to ...
  - "nixos" -> ~/mnt~
  - "boot" -> ~/mnt/boot~
#+BEGIN_SRc
# mount /dev/disk/by-label/nixos /mnt
# mkdir -p /mnt/boot
# mount /dev/disk/by-label/boot /mnt/boot
#+END_SRC
*** Legacy
#+BEGIN_SRC
# mount /dev/disk/by-label/nixos /mnt
#+END_SRC
*** Mounting Extras
*In these commands*
- Directory to mount a ssd:
  - ~/mnt/ssd~
- Label of storage:
  - ssd2
- If storage has no label:
  - ~mount /dev/disk/by-uuid/ssd2 /mnt/ssd~
#+BEGIN_SRC
# mkdir -p /mnt/ssd
# mount /dev/disk/by-label/ssd2 /mnt/ssd
#+END_SRC
*** Generate
*In these commands*
- Swap is enable:
  - Ignore if no swap or enough RAM
- Configuration files are generated @ ~/mnt/etc/nixos~
  - If you are me, you don't need to do this. Hardware-configuration.nix already in flake.
- Clone repository
#+BEGIN_SRC
# swapon /dev/sda2
# nixos-generate-config --root /mnt
# nix-env -iA nixos.git
# git clone https://github.com/matthiasbenaets/nixos-config /mnt/etc/nixos/<name>
#+END_SRC
*** Possible Extra Steps
1. Comment out emacs from ~<repo directory>/modules/editors/default.nix~
   - This is because the doom emacs script needs a second terminal instance to install
   - You can uncomment this on first rebuild
2. Switch specific host hardware-configuration.nix with generated ~/mnt/etc/nixos/hardware-configuration.nixos~
3. Change existing network card name with the one in your system
   - Look in generated hardware-configuration.nixos
   - Or enter ~$ ip a~
4. Change username in flake.nix
5. Set a ~users.users.${user}.initialPassword = ...~
   - Not really recommended. It's maybe better to follow last steps
**** Install
*In these commands*
- Move into cloned repository
  - in this example ~/mnt/etc/nixos/<name>~
- Available hosts:
  - desktop
  - laptop
  - vm
#+BEGIN_SRC
# cd /mnt/etc/nixos/<name>
# nixos-install --flake .#<host>
#+END_SRC
** Finalization
1. Set a root password after installation is done
2. Reboot without livecd
3. Login
   1. If initialPassword is not set use TTY:
      - ~Ctrl - Alt - F1~
      - login as root
      - ~# passwd <user>~
      - ~Ctrl - Alt - F7~
      - login as user
4. Optional:
   - ~$ sudo mv <location of cloned directory> <prefered location>~
   - ~$ sudo chown -R <user>:users <new directory>~
   - ~$ sudo rm /etc/nixos/configuration.nix~
   - or just clone flake again do apply same changes.
5. Dual boot:
   - OSProber probably did not find your Windows partion after the first install
   - There is a high likelyhood it will find it after:
     - ~$ cd <repo directory>~
     - ~$ sudo nixos-rebuild switch --flake .#<host>~
* Nix-Darwin Installation Guide
This flake currently has *1* host
  1. macbook

The Apple computer should have the nix package manager.
~$ sh <(curl -L https://nixos.org/nix/install)~

** Setup
*In these commands*
- Create a nix config directory
- Allow experimental features to use flakes

#+BEGIN_SRC
$ mkdir ~/.config/nix
$ echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
#+END_SRC
** Installation
*** Initial
*In these commands*
- Get git
- Clone repository
- First build of Darwin
  - This is done because the darwin command is not yet available

#+BEGIN_SRC
$ nix-env -iA nixpkgs.git
$ git clone https://github.com/matthiasbenaets/nixos-config
$ cd nixos-config
$ nix build .#darwinConfigurations.<host>.system
$ ./result/sw/bin/darwin-rebuild switch --flake .#<host>
#+END_SRC

In my flake it is possible ~./result~ is actually in ~./darwin/result~

*** Rebuild
Within the directory it is now possible to rebuild with:
- ~$ darwin-rebuild switch --flake .#<host>~
** Finalization
*Mostly optional or already correct by default*
1. Change default shell for Terminal or iTerm.
   - ~Terminal/iTerm > Preferences > General > Shells open with: Command > /bin/zsh~
2. Disable Secure Keyboard Entry. Needed for Skhd.
   - ~Terminal/iTerm > Secure Keyboard Entry~
3. Install XCode to get complete development environment.
   - ~$ xcode-select --install~
* FAQ
- What is NixOS?
  - NixOS is a Linux distribution built on top of the Nix package manager.
  - It uses declarative configurations and allow reliable system upgrades.
- What is a Flake?
  - Flakes are an upcoming feature of the Nix package manager.
  - Flakes allow you to specify your major code dependencies in a declarative way.
  - It does this by creating a flake.lock file. Some major code dependencies are:
    - nixpkgs
    - home-manager
- What is Nix-Darwin?
  - Nix-Darwin is a way to use Nix modules on Darwin (macOS).
- Should I switch to NixOS?
  - Is water wet?
- Where can I learn about Nix?
  - Nix and NixOS
    - [[file:guide.org][My General Setup Guide]]
    - [[https://nixos.org/][Website]]
    - [[https://nixos.org/learn.html][Manuals]]
    - [[https://nixos.org/manual/nix/stable/introduction.html][Manual 2]]
    - [[https://search.nixos.org/packages][Packages]] and [[https://search.nixos.org/options?][Options]]
    - [[https://nixos.wiki/][Unofficial Wiki]]
    - [[https://nixos.wiki/wiki/Resources][Wiki Resources]]
    - [[https://nixos.org/guides/nix-pills/][Nix Pills]]
    - [[https://www.ianthehenry.com/posts/how-to-learn-nix/][Some]] [[https://christine.website/blog][Blogs]]
    - [[https://nixos.wiki/wiki/Configuration_Collection][Config Collection]]
  - Home-manager
    - [[https://github.com/nix-community/home-manager][Official Repo]]
    - [[https://nix-community.github.io/home-manager/][Manual]]
    - [[https://nix-community.github.io/home-manager/options.html][Appendix A]]
    - [[https://nix-community.github.io/home-manager/nixos-options.html][Appendix B]]
    - [[https://nix-community.github.io/home-manager/tools.html][Appendix D]]
    - [[https://nixos.wiki/wiki/Home_Manager][NixOS wiki]]
  - Flakes
    - [[https://nixos.wiki/wiki/Flakes][NixOS wiki]]
    - [[https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake.html][Manual]]
    - [[https://www.tweag.io/blog/2020-05-25-flakes/][Some]] [[https://christine.website/blog/nix-flakes-3-2022-04-07][Blogs]]
  - Nix-Darwin
    - [[https://github.com/LnL7/nix-darwin/][Official Repo]]
    - [[https://daiderd.com/nix-darwin/manual/index.html][Manual]]
    - [[https://github.com/LnL7/nix-darwin/wiki/Upgrading-nix][Mini-Wiki]]
  - Videos
    - [[https://youtu.be/AGVXJ-TIv3Y][My Personal Mini-Course]]
    - [[https://www.youtube.com/watch?v=QKoQ1gKJY5A&list=PL-saUBvIJzOkjAw_vOac75v-x6EzNzZq][Wil T's Playlist]]
    - [[https://www.youtube.com/watch?v=NYyImy-lqaA&list=PLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs][Burke Libbey's Nixology]]
    - [[https://www.youtube.com/user/elitespartan117j27/videos][John Ringer's Channel]]
